# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

class {{ .Name }} < Formula
  desc "{{ .Desc }}"
  homepage "{{ .Homepage }}"
  version "{{ .Version }}"

  {{- if or .Architectures.DarwinAmd64 .Architectures.DarwinArm64 }}
  {{- if and .Architectures.DarwinAmd64 .Architectures.DarwinArm64 }}

  if OS.mac? && Hardware::CPU.intel?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_darwin_amd64.zip"
    sha256 "{{ .Architectures.DarwinAmd64SHA }}"
  end

  if OS.mac? && Hardware::CPU.arm?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_darwin_arm64.zip"
    sha256 "{{ .Architectures.DarwinArm64SHA }}"
  end
  {{- else }}

  if OS.mac?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_darwin_amd64.zip"
    sha256 "{{ .Architectures.DarwinAmd64SHA }}"
  end

  if OS.mac? && Hardware::CPU.arm?
    def caveats
      <<~EOS
        The darwin_arm64 architecture is not supported for this product
        at this time, however we do plan to support this in the future. The
        darwin_amd64 binary has been installed and may work in
        compatibility mode, but it is not fully supported.
      EOS
    end
  end
  {{- end }}
  {{- end }}
  {{- if .Architectures.LinuxAmd64 }}

  if OS.linux? && Hardware::CPU.intel?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_linux_amd64.zip"
    sha256 "{{ .Architectures.LinuxAmd64SHA }}"
  end
  {{- end }}
  {{- if .Architectures.LinuxArm }}

  if OS.linux? && Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_linux_arm.zip"
    sha256 "{{ .Architectures.LinuxArmSHA }}"
  end
  {{- end }}
  {{- if .Architectures.LinuxArm64 }}

  if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
    url "#{ENV['HOMEBREW_TAP_HASHICORP_REMOTE'].presence || 'https://releases.hashicorp.com'}/{{ .Product }}/{{ .Version }}/{{ .Product }}_{{ .Version }}_linux_arm64.zip"
    sha256 "{{ .Architectures.LinuxArm64SHA }}"
  end

  {{- end }}

  {{- with .Depends }}
  {{ range $index, $element := . }}
  depends_on "{{ . }}"
  {{- end }}
  {{- end}}

  {{- with .Recommends }}
  {{ range $index, $element := . }}
  depends_on "{{ . }}" => :recommended
  {{- end }}
  {{- end}}

  {{- if .Variant }}

  conflicts_with "{{ .Product }}-{{ .Variant }}"
  {{- else }}

  conflicts_with "{{ .Product }}"
  {{- end }}

  def install
    bin.install "{{ .Product }}"
  end
  {{- if .ServiceArgs }}

  service do
    run [bin/"{{ .Product }}"{{ range .ServiceArgs }}, "{{ . }}"{{ end }}]
    keep_alive successful_exit: false
    working_dir var
    log_path var/"log/{{ .Product }}.log"
    error_log_path var/"log/{{ .Product }}.log"
  end
  {{- end }}

  test do
    system "#{bin}/{{ .Product }} --version"
  end
end
